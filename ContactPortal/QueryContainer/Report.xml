<?xml version="1.0" encoding="euc-kr"?>
<sql>
	<sql-mapping  id="orgResult"   value-count="0" url="조직별 실적조회(부문)" >  
	<sql-content>
	<![CDATA[
	SELECT COUNT(A.ORGCD) OVER(PARTITION BY  A.ORGCD ORDER BY 1) CNT,
		   ROW_NUMBER() OVER(PARTITION BY A.ORGCD ORDER BY 1) RN,  
		   A.YYYY, A.YEAR, A.ORGCD, A.ACCTKNAME,
		   SUBSTR(A.ACCTKNAME,3,LENGTH(A.ACCTKNAME)) ACCTNAME,
		  CASE WHEN A.YYYY = A.YEAR THEN 
		  	   A.AMT_01+
			   A.AMT_02+
			   A.AMT_03+
			   A.AMT_04+
			   A.AMT_05+
			   A.AMT_06+
			   A.AMT_07+
			   A.AMT_08+
			   A.AMT_09+
			   A.AMT_10+
			   A.AMT_11+
			   A.AMT_12 
		  	   ELSE 0 END TOT_P,
		  CASE WHEN YYYY = A.YEAR AND 
		  	   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			   THEN AMT_01
		  	   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			   THEN AMT_01+AMT_02  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			   THEN AMT_01+AMT_02+AMT_03  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11+AMT_12 
			   ELSE 01 END MON_TOT_P, 
		 CASE WHEN YYYY = A.YEAR AND 
		  	   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			   THEN AMT_01_R
		  	   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			   THEN DECODE(AMT_01_R,'',0, AMT_02_R)+ DECODE(AMT_02_R,'',0,AMT_02_R)  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R  
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R
			   WHEN YYYY = A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R+AMT_12_R 
			   ELSE 01 END MON_TOT_R,
		 CASE WHEN YYYY != A.YEAR AND 
		  	   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			   THEN AMT_01_R
		  	   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			   THEN AMT_01_R+AMT_02_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R  
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R
			   WHEN YYYY != A.YEAR AND 
			   SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R+AMT_12_R 
			   ELSE 01 END LASTYEAR_TOT,   	  	   
		  DECODE(A.AMT_01  ,'',0,A.AMT_01  ) AMT_01  ,
		  DECODE(A.AMT_02  ,'',0,A.AMT_02  ) AMT_02  ,
		  DECODE(A.AMT_03  ,'',0,A.AMT_03  ) AMT_03  ,
		  DECODE(A.AMT_04  ,'',0,A.AMT_04  ) AMT_04  ,
		  DECODE(A.AMT_05  ,'',0,A.AMT_05  ) AMT_05  ,
		  DECODE(A.AMT_06  ,'',0,A.AMT_06  ) AMT_06  ,
		  DECODE(A.AMT_07  ,'',0,A.AMT_07  ) AMT_07  ,
		  DECODE(A.AMT_08  ,'',0,A.AMT_08  ) AMT_08  ,
		  DECODE(A.AMT_09  ,'',0,A.AMT_09  ) AMT_09  ,
		  DECODE(A.AMT_10  ,'',0,A.AMT_10  ) AMT_10  ,
		  DECODE(A.AMT_11  ,'',0,A.AMT_11  ) AMT_11  ,
		  DECODE(A.AMT_12  ,'',0,A.AMT_12  ) AMT_12  ,
		  DECODE(B.AMT_01_R,'',0,B.AMT_01_R) AMT_01_R,
		  DECODE(B.AMT_02_R,'',0,B.AMT_02_R) AMT_02_R,
		  DECODE(B.AMT_03_R,'',0,B.AMT_03_R) AMT_03_R,
		  DECODE(B.AMT_04_R,'',0,B.AMT_04_R) AMT_04_R,
		  DECODE(B.AMT_05_R,'',0,B.AMT_05_R) AMT_05_R,
		  DECODE(B.AMT_06_R,'',0,B.AMT_06_R) AMT_06_R,
		  DECODE(B.AMT_07_R,'',0,B.AMT_07_R) AMT_07_R,
		  DECODE(B.AMT_08_R,'',0,B.AMT_08_R) AMT_08_R,
		  DECODE(B.AMT_09_R,'',0,B.AMT_09_R) AMT_09_R,
		  DECODE(B.AMT_10_R,'',0,B.AMT_10_R) AMT_10_R,
		  DECODE(B.AMT_11_R,'',0,B.AMT_11_R) AMT_11_R,
		  DECODE(B.AMT_12_R,'',0,B.AMT_12_R) AMT_12_R
	FROM(
		SELECT YYYY, MAX(YYYY) OVER(PARTITION BY ORGCD ORDER BY 1) YEAR, 
			   ORGCD, ACCTKNAME, 
				   SUM(AMT_01) AMT_01,
				   SUM(AMT_02) AMT_02,
				   SUM(AMT_03) AMT_03,
				   SUM(AMT_04) AMT_04,
				   SUM(AMT_05) AMT_05,
				   SUM(AMT_06) AMT_06,
				   SUM(AMT_07) AMT_07,
				   SUM(AMT_08) AMT_08,
				   SUM(AMT_09) AMT_09,
				   SUM(AMT_10) AMT_10,
				   SUM(AMT_11) AMT_11,
				   SUM(AMT_12) AMT_12
		FROM(
			SELECT /*+ INDEX(BUDGETPLAN XPKBUDGETPLAN)*/  SUBSTR(YPLANCD,1,4) YYYY, 
				    CASE WHEN (SELECT SUBSTR(DYPLANCD,1,2) FROM ORG WHERE DYPLANCD = ORGCD) IN ('CA','CB','CC') THEN '1.GIS'
			   		WHEN (SELECT SUBSTR(DYPLANCD,1,2) FROM ORG WHERE DYPLANCD = ORGCD) IN ('CD','CE') THEN '2.SI'
					WHEN (SELECT SUBSTR(DYPLANCD,1,2) FROM ORG WHERE DYPLANCD = ORGCD) IN ('CG','CH','CI') THEN '3.ITO'
					WHEN (SELECT SUBSTR(DYPLANCD,1,2) FROM ORG WHERE DYPLANCD = ORGCD) IN ('CP','CQ','CR') THEN '4.경영지원'
					WHEN SUBSTR(DYPLANCD,1,1) IN ('B','P','R','S','Y') AND LENGTH(DYPLANCD) = '8' THEN  -- PROJECT CODE
						( SELECT 
						  ( SELECT 
						    CASE WHEN SUBSTR(ORGCD,1,2) IN ('CA','CB','CC') THEN '1.GIS'
								 WHEN SUBSTR(ORGCD,1,2) IN ('CD','CE') THEN '2.SI'
								 WHEN SUBSTR(ORGCD,1,2) IN ('CG','CH','CI') THEN '3.ITO'
								 WHEN SUBSTR(ORGCD,1,2) IN ('CP','CQ','CR') THEN '4.경영지원'
						    	 ELSE ORGCD END  
						  	FROM ORG 
							WHERE ORG_NO = PJTORG_NO) 
						  FROM PROJECT 
						  WHERE PJTCD = DYPLANCD )     
			        ELSE '' 
					END ORGCD, 
					DYPLANCD,
				   SUBSTR(ACCTCD,1,4)||'0' ACCTCD,
				   CASE WHEN ACCTCD LIKE '4%' THEN '0.매출액'
				   		WHEN ACCTCD LIKE '5%' THEN '1.매출원가'
						WHEN ACCTCD = '92000' THEN '1.매출원가' 
				   ELSE '' END ACCTKNAME,
				   AMT_01,
				   AMT_02,
				   AMT_03,
				   AMT_04,
				   AMT_05,
				   AMT_06,
				   AMT_07,
				   AMT_08,
				   AMT_09,
				   AMT_10,
				   AMT_11,
				   AMT_12 
			FROM BUDGETPLAN 
			WHERE ISDEFAULT = 'C'
			AND SUBSTR(YPLANCD,1,4) IN ( TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-12),'YYYY') 
			  , TO_CHAR(SYSDATE,'YYYY'))				
		)GROUP BY YYYY, ORGCD, ACCTKNAME		
	)A, (
	SELECT YEAR, ORGCD, ACCTKNAME, 	
		   SUM(AMT_01_R) AMT_01_R,
		   SUM(AMT_02_R) AMT_02_R,
		   SUM(AMT_03_R) AMT_03_R,
		   SUM(AMT_04_R) AMT_04_R,
		   SUM(AMT_05_R) AMT_05_R,
		   SUM(AMT_06_R) AMT_06_R,
		   SUM(AMT_07_R) AMT_07_R,
		   SUM(AMT_08_R) AMT_08_R,
		   SUM(AMT_09_R) AMT_09_R,
		   SUM(AMT_10_R) AMT_10_R,
		   SUM(AMT_11_R) AMT_11_R,
		   SUM(AMT_12_R) AMT_12_R
	FROM(	
		 SELECT YEAR, 
		 	   CASE WHEN (SELECT SUBSTR(ORGCD,1,2) FROM ORG WHERE ORIGINORG_NO = ORG_NO) IN ('CA','CB','CC') THEN '1.GIS'
			   		WHEN (SELECT SUBSTR(ORGCD,1,2) FROM ORG WHERE ORIGINORG_NO = ORG_NO) IN ('CD','CE') THEN '2.SI'
					WHEN (SELECT SUBSTR(ORGCD,1,2) FROM ORG WHERE ORIGINORG_NO = ORG_NO) IN ('CG','CH','CI') THEN '3.ITO'
					WHEN (SELECT SUBSTR(ORGCD,1,2) FROM ORG WHERE ORIGINORG_NO = ORG_NO) IN ('CP','CQ','CR') THEN '4.MAN'		    
			   ELSE originorg_no END ORGCD, 
		 	   SUBSTR(ACCTCD,1,4)||'0' ACCTCD,
		  	   CASE WHEN ACCTCD LIKE '4%' THEN '0.매출액'
		  			WHEN ACCTCD LIKE '5%' THEN '1.매출원가'
				WHEN ACCTCD = '92000' THEN '1.매출원가' 
		 			ELSE '' END ACCTKNAME,
		 	    SUM(DECODE(MONTH, 01, AMT,0)) AMT_01_R,
		 		SUM(DECODE(MONTH, 02, AMT,0)) AMT_02_R,
		 		SUM(DECODE(MONTH, 03, AMT,0)) AMT_03_R,
		 		SUM(DECODE(MONTH, 04, AMT,0)) AMT_04_R,
		 		SUM(DECODE(MONTH, 05, AMT,0)) AMT_05_R,
		 		SUM(DECODE(MONTH, 06, AMT,0)) AMT_06_R,
		 		SUM(DECODE(MONTH, 07, AMT,0)) AMT_07_R,
		 		SUM(DECODE(MONTH, 08, AMT,0)) AMT_08_R,
		 		SUM(DECODE(MONTH, 09, AMT,0)) AMT_09_R,
		 		SUM(DECODE(MONTH, 10, AMT,0)) AMT_10_R,
		 		SUM(DECODE(MONTH, 11, AMT,0)) AMT_11_R,
		 		SUM(DECODE(MONTH, 12, AMT,0)) AMT_12_R
		 FROM ACCT_COSTARTS_ORG
		 WHERE YEAR IN ( TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-12),'YYYY')
			  ,TO_CHAR(SYSDATE,'YYYY') )
		 AND COSTTYPE = 'D'
		 GROUP BY YEAR, MONTH, ACCTCD,ORIGINORG_NO 	
		)GROUP BY YEAR, ORGCD, ACCTKNAME 	
	)B	
	WHERE A.ORGCD = B.ORGCD(+)
	AND A.ACCTKNAME = B.ACCTKNAME(+)
	AND A.YYYY = B.YEAR(+)	
	AND A.ORGCD IS NOT NULL
	ORDER BY ORGCD,RN, ACCTKNAME, YYYY DESC
	]]>
	</sql-content>
	</sql-mapping>

	<sql-mapping  id="groupResult"   value-count="0" url="1.2 부문실적조회 " >  
	<sql-content>
	<![CDATA[
	SELECT COUNT(A.ORGCD) OVER(PARTITION BY A.ORGCD ORDER BY 1) CNT,
		   ROW_NUMBER() OVER(PARTITION BY A.ORGCD ORDER BY 1) RN,
		   A.YYYY, A.YEAR, A.ORGCD,(SELECT ORGNAME FROM ORG WHERE ORGCD = A.ORGCD) ORGNAME, A.ACCTKNAME,
		   SUBSTR(A.ACCTKNAME,3,LENGTH(A.ACCTKNAME)) ACCTNAME,
	  CASE WHEN A.YYYY = A.YEAR THEN 
			A.AMT_01+
			A.AMT_02+
			A.AMT_03+
			A.AMT_04+
			A.AMT_05+
			A.AMT_06+
			A.AMT_07+
			A.AMT_08+
			A.AMT_09+
			A.AMT_10+
			A.AMT_11+
			A.AMT_12 
			ELSE 0 END TOT_P,
	  CASE WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			THEN AMT_01_R
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			THEN AMT_01_R+AMT_02_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04'
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R+AMT_12_R 
			ELSE 0 END MON_TOT_R,  		   
	CASE WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			THEN AMT_01
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			THEN AMT_01+AMT_02  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			THEN AMT_01+AMT_02+AMT_03  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10  
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11
			WHEN YYYY = A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11+AMT_12 
			ELSE 0 END MON_TOT_P,   
	CASE  WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			THEN AMT_01
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			THEN AMT_01+AMT_02  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			THEN AMT_01+AMT_02+AMT_03  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10  
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11
			WHEN YYYY != A.YEAR AND 
			SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11+AMT_12 
			ELSE 0 END LASTYEAR_TOT,   	   
			DECODE(A.AMT_01  ,'',0,A.AMT_01  ) AMT_01  ,
			DECODE(A.AMT_02  ,'',0,A.AMT_02  ) AMT_02  ,
			DECODE(A.AMT_03  ,'',0,A.AMT_03  ) AMT_03  ,
			DECODE(A.AMT_04  ,'',0,A.AMT_04  ) AMT_04  ,
			DECODE(A.AMT_05  ,'',0,A.AMT_05  ) AMT_05  ,
			DECODE(A.AMT_06  ,'',0,A.AMT_06  ) AMT_06  ,
			DECODE(A.AMT_07  ,'',0,A.AMT_07  ) AMT_07  ,
			DECODE(A.AMT_08  ,'',0,A.AMT_08  ) AMT_08  ,
			DECODE(A.AMT_09  ,'',0,A.AMT_09  ) AMT_09  ,
			DECODE(A.AMT_10  ,'',0,A.AMT_10  ) AMT_10  ,
			DECODE(A.AMT_11  ,'',0,A.AMT_11  ) AMT_11  ,
			DECODE(A.AMT_12  ,'',0,A.AMT_12  ) AMT_12  ,
			DECODE(B.AMT_01_R,'',0,B.AMT_01_R) AMT_01_R,
			DECODE(B.AMT_02_R,'',0,B.AMT_02_R) AMT_02_R,
			DECODE(B.AMT_03_R,'',0,B.AMT_03_R) AMT_03_R,
			DECODE(B.AMT_04_R,'',0,B.AMT_04_R) AMT_04_R,
			DECODE(B.AMT_05_R,'',0,B.AMT_05_R) AMT_05_R,
			DECODE(B.AMT_06_R,'',0,B.AMT_06_R) AMT_06_R,
			DECODE(B.AMT_07_R,'',0,B.AMT_07_R) AMT_07_R,
			DECODE(B.AMT_08_R,'',0,B.AMT_08_R) AMT_08_R,
			DECODE(B.AMT_09_R,'',0,B.AMT_09_R) AMT_09_R,
			DECODE(B.AMT_10_R,'',0,B.AMT_10_R) AMT_10_R,
			DECODE(B.AMT_11_R,'',0,B.AMT_11_R) AMT_11_R,
			DECODE(B.AMT_12_R,'',0,B.AMT_12_R) AMT_12_R
	FROM(
		SELECT YYYY,ORGCD, ACCTKNAME,
			   MAX(YYYY) OVER(PARTITION BY ORGCD  ORDER BY 1) YEAR, 
			   SUM(AMT_01) AMT_01,
			   SUM(AMT_02) AMT_02,
			   SUM(AMT_03) AMT_03,
			   SUM(AMT_04) AMT_04,
			   SUM(AMT_05) AMT_05,
			   SUM(AMT_06) AMT_06,
			   SUM(AMT_07) AMT_07,
			   SUM(AMT_08) AMT_08,
			   SUM(AMT_09) AMT_09,
			   SUM(AMT_10) AMT_10,
			   SUM(AMT_11) AMT_11,
			   SUM(AMT_12) AMT_12
		FROM(	
			SELECT  /*+ INDEX(BUDGETPLAN XPKBUDGETPLAN)*/  DYPLANCD, SUBSTR(YPLANCD,1,4) YYYY,
				   CASE WHEN SUBSTR(DYPLANCD,1,1) = 'C' THEN SUBSTR(DYPLANCD,1,2)||'00'
				   		WHEN LENGTH(DYPLANCD) = 8 AND SUBSTR(DYPLANCD,1,1) IN ('B','P','R','S','Y') THEN  
						(SELECT /*+ INDEX(PROJECT IDX_PJTCD)*/
						  ( SELECT /*+ INDEX(ORG IDX_ORGCD)*/ SUBSTR(ORGCD,1,2)||'00' 
						  	FROM ORG 
							WHERE ORG_NO = PJTORG_NO ) 
						FROM PROJECT 
						WHERE PJTCD = DYPLANCD )
				   ELSE '' 
				   END ORGCD,
				   SUBSTR(ACCTCD,1,4)||'0' ACCTCD,
				   CASE WHEN ACCTCD LIKE '4%' THEN '0.매출액'
				   		WHEN ACCTCD LIKE '5%' THEN '1.매출원가'
						WHEN ACCTCD = '92000' THEN '1.매출원가' 
				   ELSE '' END ACCTKNAME,
				   AMT_01,
				   AMT_02,
				   AMT_03,
				   AMT_04,
				   AMT_05,
				   AMT_06,
				   AMT_07,
				   AMT_08,
				   AMT_09,
				   AMT_10,
				   AMT_11,
				   AMT_12 
			FROM BUDGETPLAN
			WHERE SUBSTR(YPLANCD,1,4) IN (TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-12),'YYYY') 
			  ,TO_CHAR(SYSDATE,'YYYY'))
			AND ISDEFAULT = 'C'
		)
		WHERE SUBSTR(ORGCD,1,2) IN (ORGCD:)	
		GROUP BY YYYY, ORGCD,  ACCTKNAME
	)A, (
	SELECT YEAR, ORGCD, ACCTKNAME, 	
		   SUM(AMT_01_R) AMT_01_R,
		   SUM(AMT_02_R) AMT_02_R,
		   SUM(AMT_03_R) AMT_03_R,
		   SUM(AMT_04_R) AMT_04_R,
		   SUM(AMT_05_R) AMT_05_R,
		   SUM(AMT_06_R) AMT_06_R,
		   SUM(AMT_07_R) AMT_07_R,
		   SUM(AMT_08_R) AMT_08_R,
		   SUM(AMT_09_R) AMT_09_R,
		   SUM(AMT_10_R) AMT_10_R,
		   SUM(AMT_11_R) AMT_11_R,
		   SUM(AMT_12_R) AMT_12_R
	FROM(	   
		 SELECT YEAR, 
		 	   (SELECT SUBSTR(ORGCD,1,2)||'00' FROM ORG WHERE ORIGINORG_NO = ORG_NO) ORGCD, 
		 	   SUBSTR(ACCTCD,1,4)||'0' ACCTCD,
		  	   CASE WHEN ACCTCD LIKE '4%' THEN '0.매출액'
		  			WHEN ACCTCD LIKE '5%' THEN '1.매출원가'
				WHEN ACCTCD = '92000' THEN '1.매출원가' 
		 			ELSE '' END ACCTKNAME,
		 	    SUM(DECODE(MONTH, 01, AMT,0)) AMT_01_R,
		 		SUM(DECODE(MONTH, 02, AMT,0)) AMT_02_R,
		 		SUM(DECODE(MONTH, 03, AMT,0)) AMT_03_R,
		 		SUM(DECODE(MONTH, 04, AMT,0)) AMT_04_R,
		 		SUM(DECODE(MONTH, 05, AMT,0)) AMT_05_R,
		 		SUM(DECODE(MONTH, 06, AMT,0)) AMT_06_R,
		 		SUM(DECODE(MONTH, 07, AMT,0)) AMT_07_R,
		 		SUM(DECODE(MONTH, 08, AMT,0)) AMT_08_R,
		 		SUM(DECODE(MONTH, 09, AMT,0)) AMT_09_R,
		 		SUM(DECODE(MONTH, 10, AMT,0)) AMT_10_R,
		 		SUM(DECODE(MONTH, 11, AMT,0)) AMT_11_R,
		 		SUM(DECODE(MONTH, 12, AMT,0)) AMT_12_R
		 FROM ACCT_COSTARTS_ORG
		 WHERE YEAR IN (TO_CHAR(ADD_MONTHS(TO_DATE(SYSDATE),-12),'YYYY')
			  ,TO_CHAR(SYSDATE,'YYYY') )
		 AND COSTTYPE = 'D'
		 AND (SELECT SUBSTR(ORGCD,1,2) FROM ORG WHERE ORIGINORG_NO = ORG_NO) IN (ORGCD:)
		 GROUP BY YEAR, MONTH, ACCTCD,ORIGINORG_NO 
		)GROUP BY YEAR, ORGCD, ACCTKNAME 		
	)B	
	WHERE A.ORGCD = B.ORGCD(+)
	AND A.ACCTKNAME = B.ACCTKNAME(+)
	AND A.YYYY = B.YEAR(+)	
	ORDER BY ORGCD, RN, ACCTKNAME,YYYY DESC
	]]>
	</sql-content>
	</sql-mapping>
	
	<sql-mapping  id="detailList_MainItem"   value-count="0" url="1.3 팀별 세부조회 : 주요비목" >  
	<sql-content>
	<![CDATA[
	SELECT YYYY, ORGCD, ACCTKNAME, TOT_P,
	  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
		   THEN PLAN_01
	  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
		   THEN PLAN_01+PLAN_02  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
		   THEN PLAN_01+PLAN_02+PLAN_03  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09+PLAN_10  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09+PLAN_10+PLAN_11
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
		   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09+PLAN_10+PLAN_11+PLAN_12 
		   ELSE 0 END MM_MON_TOT_P,
	  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
		   THEN RESULT_01
	  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
		   THEN RESULT_01+RESULT_02  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
		   THEN RESULT_01+RESULT_02+RESULT_03  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09+RESULT_10  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09+RESULT_10+RESULT_11
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
		   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09+RESULT_10+RESULT_11+RESULT_12 
		   ELSE 0 END MM_MON_TOT_R,      
		PLAN_01,
		PLAN_02,
		PLAN_03,
		PLAN_04,
		PLAN_05,
		PLAN_06,
		PLAN_07,
		PLAN_08,
		PLAN_09,
		PLAN_10,
		PLAN_11,
		PLAN_12,
		RESULT_01,
		RESULT_02,
		RESULT_03,
		RESULT_04,
		RESULT_05,
		RESULT_06,
		RESULT_07,
		RESULT_08,
		RESULT_09,
		RESULT_10,
		RESULT_11,
		RESULT_12
	FROM(
	SELECT YYYY, ORGCD, '  투입인력' ACCTKNAME,
	   SUM(
	   PLAN_01
	   +PLAN_02
	   +PLAN_03
	   +PLAN_04
	   +PLAN_05
	   +PLAN_06
	   +PLAN_07
	   +PLAN_08
	   +PLAN_09
	   +PLAN_10
	   +PLAN_11
	   +PLAN_12) TOT_P, 
	   SUM(PLAN_01)PLAN_01,
	   SUM(PLAN_02)PLAN_02,
	   SUM(PLAN_03)PLAN_03,
	   SUM(PLAN_04)PLAN_04,
	   SUM(PLAN_05)PLAN_05,
	   SUM(PLAN_06)PLAN_06,
	   SUM(PLAN_07)PLAN_07,
	   SUM(PLAN_08)PLAN_08,
	   SUM(PLAN_09)PLAN_09,
	   SUM(PLAN_10)PLAN_10,
	   SUM(PLAN_11)PLAN_11,
	   SUM(PLAN_12)PLAN_12,
	   SUM(RESULT_01)RESULT_01,
	   SUM(RESULT_02)RESULT_02,
	   SUM(RESULT_03)RESULT_03,
	   SUM(RESULT_04)RESULT_04,
	   SUM(RESULT_05)RESULT_05,
	   SUM(RESULT_06)RESULT_06,
	   SUM(RESULT_07)RESULT_07,
	   SUM(RESULT_08)RESULT_08,
	   SUM(RESULT_09)RESULT_09,
	   SUM(RESULT_10)RESULT_10,
	   SUM(RESULT_11)RESULT_11,
	   SUM(RESULT_12)RESULT_12 
	FROM(	     	
		SELECT SUBSTR(YYMM,1,4) YYYY, (SELECT ORGCD FROM ORG WHERE MAINOBJ_NO = ORG_NO) ORGCD,
			   DECODE(SUBSTR(YYMM,5,6),'01', PLAN_MM, 0)PLAN_01,
			   DECODE(SUBSTR(YYMM,5,6),'02', PLAN_MM, 0)PLAN_02, 
			   DECODE(SUBSTR(YYMM,5,6),'03', PLAN_MM, 0)PLAN_03,
			   DECODE(SUBSTR(YYMM,5,6),'04', PLAN_MM, 0)PLAN_04, 
			   DECODE(SUBSTR(YYMM,5,6),'05', PLAN_MM, 0)PLAN_05,
			   DECODE(SUBSTR(YYMM,5,6),'06', PLAN_MM, 0)PLAN_06, 
			   DECODE(SUBSTR(YYMM,5,6),'07', PLAN_MM, 0)PLAN_07,
			   DECODE(SUBSTR(YYMM,5,6),'08', PLAN_MM, 0)PLAN_08, 
			   DECODE(SUBSTR(YYMM,5,6),'09', PLAN_MM, 0)PLAN_09,
			   DECODE(SUBSTR(YYMM,5,6),'10', PLAN_MM, 0)PLAN_10, 
			   DECODE(SUBSTR(YYMM,5,6),'11', PLAN_MM, 0)PLAN_11,
			   DECODE(SUBSTR(YYMM,5,6),'12', PLAN_MM, 0)PLAN_12, 
			   DECODE(SUBSTR(YYMM,5,6),'01', RESULT_MM, 0)RESULT_01,
			   DECODE(SUBSTR(YYMM,5,6),'02', RESULT_MM, 0)RESULT_02, 
			   DECODE(SUBSTR(YYMM,5,6),'03', RESULT_MM, 0)RESULT_03,
			   DECODE(SUBSTR(YYMM,5,6),'04', RESULT_MM, 0)RESULT_04, 
			   DECODE(SUBSTR(YYMM,5,6),'05', RESULT_MM, 0)RESULT_05,
			   DECODE(SUBSTR(YYMM,5,6),'06', RESULT_MM, 0)RESULT_06, 
			   DECODE(SUBSTR(YYMM,5,6),'07', RESULT_MM, 0)RESULT_07,
			   DECODE(SUBSTR(YYMM,5,6),'08', RESULT_MM, 0)RESULT_08, 
			   DECODE(SUBSTR(YYMM,5,6),'09', RESULT_MM, 0)RESULT_09,
			   DECODE(SUBSTR(YYMM,5,6),'10', RESULT_MM, 0)RESULT_10, 
			   DECODE(SUBSTR(YYMM,5,6),'11', RESULT_MM, 0)RESULT_11,
			   DECODE(SUBSTR(YYMM,5,6),'12', RESULT_MM, 0)RESULT_12 
		FROM MM_MAINOBJ
		WHERE SUBSTR(YYMM,1,4) = YYYY:
		AND (SELECT ORGCD FROM ORG WHERE MAINOBJ_NO = ORG_NO) = ORGCD:
	)	
	GROUP BY YYYY, ORGCD
	)		
	UNION ALL
	SELECT YPLANCD, DYPLANCD, ACCTKNAME, TOT_P,
	  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
		   THEN AMT_01
	  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
		   THEN AMT_01+AMT_02  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
		   THEN AMT_01+AMT_02+AMT_03  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
		   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11+AMT_12 
		   ELSE 0 END MM_MON_TOT_P, 
   	  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
		   THEN AMT_01_R
	  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
		   THEN AMT_01_R+AMT_02_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R  
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R
		   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R+AMT_12_R 
		   ELSE 0 END MM_MON_TOT_R, 
			AMT_01,
		    AMT_02,
		    AMT_03,
		    AMT_04,
		    AMT_05,
		    AMT_06,
		    AMT_07,
		    AMT_08,
		    AMT_09,
		    AMT_10,
		    AMT_11,
		    AMT_12,
		    AMT_01_R,
		    AMT_02_R,
		    AMT_03_R,
		    AMT_04_R,
		    AMT_05_R,
		    AMT_06_R,
		    AMT_07_R,
		    AMT_08_R,
		    AMT_09_R,
		    AMT_10_R,
		    AMT_11_R,
		    AMT_12_R
	FROM(		
	SELECT A.YPLANCD, 
		   A.DYPLANCD, 
		   A.ACCTKNAME,
		   (A.AMT_01
		   +A.AMT_02
		   +A.AMT_03
		   +A.AMT_04
		   +A.AMT_05
		   +A.AMT_06
		   +A.AMT_07
		   +A.AMT_08
		   +A.AMT_09
		   +A.AMT_10
		   +A.AMT_11
		   +A.AMT_12) TOT_P, 
		   A.AMT_01,
		   A.AMT_02,
		   A.AMT_03,
		   A.AMT_04,
		   A.AMT_05,
		   A.AMT_06,
		   A.AMT_07,
		   A.AMT_08,
		   A.AMT_09,
		   A.AMT_10,
		   A.AMT_11,
		   A.AMT_12, 
		   DECODE(B.AMT_01_R,'',0,B.AMT_01_R) AMT_01_R,
			DECODE(B.AMT_02_R,'',0,B.AMT_02_R) AMT_02_R,
			DECODE(B.AMT_03_R,'',0,B.AMT_03_R) AMT_03_R,
			DECODE(B.AMT_04_R,'',0,B.AMT_04_R) AMT_04_R,
			DECODE(B.AMT_05_R,'',0,B.AMT_05_R) AMT_05_R,
			DECODE(B.AMT_06_R,'',0,B.AMT_06_R) AMT_06_R,
			DECODE(B.AMT_07_R,'',0,B.AMT_07_R) AMT_07_R,
			DECODE(B.AMT_08_R,'',0,B.AMT_08_R) AMT_08_R,
			DECODE(B.AMT_09_R,'',0,B.AMT_09_R) AMT_09_R,
			DECODE(B.AMT_10_R,'',0,B.AMT_10_R) AMT_10_R,
			DECODE(B.AMT_11_R,'',0,B.AMT_11_R) AMT_11_R,
			DECODE(B.AMT_12_R,'',0,B.AMT_12_R) AMT_12_R
	FROM(		
		SELECT YPLANCD, DYPLANCD, ACCTKNAME,
		   SUM(AMT_01) AMT_01,
		   SUM(AMT_02) AMT_02,
		   SUM(AMT_03) AMT_03,
		   SUM(AMT_04) AMT_04,
		   SUM(AMT_05) AMT_05,
		   SUM(AMT_06) AMT_06,
		   SUM(AMT_07) AMT_07,
		   SUM(AMT_08) AMT_08,
		   SUM(AMT_09) AMT_09,
		   SUM(AMT_10) AMT_10,
		   SUM(AMT_11) AMT_11,
		   SUM(AMT_12) AMT_12
	FROM(	
		SELECT SUBSTR(YPLANCD,1,4) YPLANCD, 
			   DYPLANCD, 
			   CASE WHEN ACCTCD LIKE '41%'  THEN ' 매출액' 	
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50010' THEN '1.상품원가' 
					WHEN SUBSTR(ACCTCD,1,4)||'0' IN ('50020','50030','50030','50040','50060') THEN '2.인건비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50050' THEN '3.잡급'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50110' THEN '4.위탁용역비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50140' THEN '5.복리후생비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50150' THEN '6.급식비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50160' THEN '7.교통여비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50260' THEN '8.접대비'
					ELSE '9.제경비' END ACCTKNAME,
			   ACCTCD,
			   AMT_01,
			   AMT_02,
			   AMT_03,
			   AMT_04,
			   AMT_05,
			   AMT_06,
			   AMT_07,
			   AMT_08,
			   AMT_09,
			   AMT_10,
			   AMT_11,
			   AMT_12 
		FROM BUDGETPLAN
		WHERE ISDEFAULT = 'C'
		AND DYPLANCD = ORGCD:
		AND SUBSTR(YPLANCD,1,4) = YYYY:
	)GROUP BY YPLANCD, DYPLANCD, ACCTKNAME
	)A,(
	SELECT YEAR, ORGCD,  ACCTKNAME,
		   SUM(AMT_01_R) AMT_01_R,
		   SUM(AMT_02_R) AMT_02_R,
		   SUM(AMT_03_R) AMT_03_R,
		   SUM(AMT_04_R) AMT_04_R,
		   SUM(AMT_05_R) AMT_05_R,
		   SUM(AMT_06_R) AMT_06_R,
		   SUM(AMT_07_R) AMT_07_R,
		   SUM(AMT_08_R) AMT_08_R,
		   SUM(AMT_09_R) AMT_09_R,
		   SUM(AMT_10_R) AMT_10_R,
		   SUM(AMT_11_R) AMT_11_R,
		   SUM(AMT_12_R) AMT_12_R
	FROM(	   
		  SELECT YEAR, 
		  	   MONTH, 
		  	   ORIGINORG_NO ORGNO,
		  	   (SELECT ORGCD FROM ORG WHERE ORIGINORG_NO = ORG_NO) ORGCD, 
		  	   SUBSTR(ACCTCD,1,4)||'0' ACCTCD,
			   CASE WHEN ACCTCD LIKE '41%'  THEN '0.매출액' 	
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50010' THEN '1.상품원가' 
					WHEN SUBSTR(ACCTCD,1,4)||'0' IN ('50020','50030','50030','50040','50060') THEN '2.인건비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50050' THEN '3.잡급'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50110' THEN '4.위탁용역비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50140' THEN '5.복리후생비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50150' THEN '6.급식비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50160' THEN '7.교통여비'
					WHEN SUBSTR(ACCTCD,1,4)||'0' ='50260' THEN '8.접대비'
					ELSE '9.제경비' END ACCTKNAME,
		  	    SUM(DECODE(MONTH, 01, AMT,0)) AMT_01_R,
		  		SUM(DECODE(MONTH, 02, AMT,0)) AMT_02_R,
		  		SUM(DECODE(MONTH, 03, AMT,0)) AMT_03_R,
		  		SUM(DECODE(MONTH, 04, AMT,0)) AMT_04_R,
		  		SUM(DECODE(MONTH, 05, AMT,0)) AMT_05_R,
		  		SUM(DECODE(MONTH, 06, AMT,0)) AMT_06_R,
		  		SUM(DECODE(MONTH, 07, AMT,0)) AMT_07_R,
		  		SUM(DECODE(MONTH, 08, AMT,0)) AMT_08_R,
		  		SUM(DECODE(MONTH, 09, AMT,0)) AMT_09_R,
		  		SUM(DECODE(MONTH, 10, AMT,0)) AMT_10_R,
		  		SUM(DECODE(MONTH, 11, AMT,0)) AMT_11_R,
		  		SUM(DECODE(MONTH, 12, AMT,0)) AMT_12_R
		  FROM ACCT_COSTARTS_ORG
		  WHERE YEAR = YYYY:
		  AND COSTTYPE = 'D'
		  AND (SELECT ORGCD FROM ORG WHERE ORIGINORG_NO = ORG_NO) = ORGCD:
		  GROUP BY YEAR, MONTH, ACCTCD,ORIGINORG_NO 		  
	)GROUP BY YEAR, ORGNO, ORGCD, ACCTKNAME	
	)B
	WHERE A.ACCTKNAME = B.ACCTKNAME(+)
	)
	ORDER BY ACCTKNAME
	]]>
	</sql-content>
	</sql-mapping>

	<sql-mapping  id="detailList_Item"   value-count="0" url="1.4 팀별 세부조회 : 비목" >  
	<sql-content>
	<![CDATA[
	SELECT YYYY, ORGCD, ACCTCD, ACCTKNAME, TOT_P,
		  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			   THEN PLAN_01
		  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			   THEN PLAN_01+PLAN_02  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			   THEN PLAN_01+PLAN_02+PLAN_03  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09+PLAN_10  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09+PLAN_10+PLAN_11
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			   THEN PLAN_01+PLAN_02+PLAN_03+PLAN_04+PLAN_05+PLAN_06+PLAN_07+PLAN_08+PLAN_09+PLAN_10+PLAN_11+PLAN_12 
			   ELSE 0 END MM_MON_TOT_P,
		  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			   THEN RESULT_01
		  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			   THEN RESULT_01+RESULT_02  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			   THEN RESULT_01+RESULT_02+RESULT_03  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09+RESULT_10  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09+RESULT_10+RESULT_11
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			   THEN RESULT_01+RESULT_02+RESULT_03+RESULT_04+RESULT_05+RESULT_06+RESULT_07+RESULT_08+RESULT_09+RESULT_10+RESULT_11+RESULT_12 
			   ELSE 0 END MM_MON_TOT_R,      
			PLAN_01,
			PLAN_02,
			PLAN_03,
			PLAN_04,
			PLAN_05,
			PLAN_06,
			PLAN_07,
			PLAN_08,
			PLAN_09,
			PLAN_10,
			PLAN_11,
			PLAN_12,
			RESULT_01,
			RESULT_02,
			RESULT_03,
			RESULT_04,
			RESULT_05,
			RESULT_06,
			RESULT_07,
			RESULT_08,
			RESULT_09,
			RESULT_10,
			RESULT_11,
			RESULT_12 
	FROM(
		SELECT YYYY, ORGCD, '10000' ACCTCD, '투입인력(MM)' ACCTKNAME,
			   SUM(
			   PLAN_01
			   +PLAN_02
			   +PLAN_03
			   +PLAN_04
			   +PLAN_05
			   +PLAN_06
			   +PLAN_07
			   +PLAN_08
			   +PLAN_09
			   +PLAN_10
			   +PLAN_11
			   +PLAN_12) TOT_P, 
			   SUM(PLAN_01)PLAN_01,
			   SUM(PLAN_02)PLAN_02,
			   SUM(PLAN_03)PLAN_03,
			   SUM(PLAN_04)PLAN_04,
			   SUM(PLAN_05)PLAN_05,
			   SUM(PLAN_06)PLAN_06,
			   SUM(PLAN_07)PLAN_07,
			   SUM(PLAN_08)PLAN_08,
			   SUM(PLAN_09)PLAN_09,
			   SUM(PLAN_10)PLAN_10,
			   SUM(PLAN_11)PLAN_11,
			   SUM(PLAN_12)PLAN_12,
			   SUM(RESULT_01)RESULT_01,
			   SUM(RESULT_02)RESULT_02,
			   SUM(RESULT_03)RESULT_03,
			   SUM(RESULT_04)RESULT_04,
			   SUM(RESULT_05)RESULT_05,
			   SUM(RESULT_06)RESULT_06,
			   SUM(RESULT_07)RESULT_07,
			   SUM(RESULT_08)RESULT_08,
			   SUM(RESULT_09)RESULT_09,
			   SUM(RESULT_10)RESULT_10,
			   SUM(RESULT_11)RESULT_11,
			   SUM(RESULT_12)RESULT_12 
		FROM(	 	    	
			SELECT SUBSTR(YYMM,1,4) YYYY, (SELECT ORGCD FROM ORG WHERE MAINOBJ_NO = ORG_NO) ORGCD,
				   DECODE(SUBSTR(YYMM,5,6),'01', PLAN_MM, 0)PLAN_01,
				   DECODE(SUBSTR(YYMM,5,6),'02', PLAN_MM, 0)PLAN_02, 
				   DECODE(SUBSTR(YYMM,5,6),'03', PLAN_MM, 0)PLAN_03,
				   DECODE(SUBSTR(YYMM,5,6),'04', PLAN_MM, 0)PLAN_04, 
				   DECODE(SUBSTR(YYMM,5,6),'05', PLAN_MM, 0)PLAN_05,
				   DECODE(SUBSTR(YYMM,5,6),'06', PLAN_MM, 0)PLAN_06, 
				   DECODE(SUBSTR(YYMM,5,6),'07', PLAN_MM, 0)PLAN_07,
				   DECODE(SUBSTR(YYMM,5,6),'08', PLAN_MM, 0)PLAN_08, 
				   DECODE(SUBSTR(YYMM,5,6),'09', PLAN_MM, 0)PLAN_09,
				   DECODE(SUBSTR(YYMM,5,6),'10', PLAN_MM, 0)PLAN_10, 
				   DECODE(SUBSTR(YYMM,5,6),'11', PLAN_MM, 0)PLAN_11,
				   DECODE(SUBSTR(YYMM,5,6),'12', PLAN_MM, 0)PLAN_12, 
				   DECODE(SUBSTR(YYMM,5,6),'01', RESULT_MM, 0)RESULT_01,
				   DECODE(SUBSTR(YYMM,5,6),'02', RESULT_MM, 0)RESULT_02, 
				   DECODE(SUBSTR(YYMM,5,6),'03', RESULT_MM, 0)RESULT_03,
				   DECODE(SUBSTR(YYMM,5,6),'04', RESULT_MM, 0)RESULT_04, 
				   DECODE(SUBSTR(YYMM,5,6),'05', RESULT_MM, 0)RESULT_05,
				   DECODE(SUBSTR(YYMM,5,6),'06', RESULT_MM, 0)RESULT_06, 
				   DECODE(SUBSTR(YYMM,5,6),'07', RESULT_MM, 0)RESULT_07,
				   DECODE(SUBSTR(YYMM,5,6),'08', RESULT_MM, 0)RESULT_08, 
				   DECODE(SUBSTR(YYMM,5,6),'09', RESULT_MM, 0)RESULT_09,
				   DECODE(SUBSTR(YYMM,5,6),'10', RESULT_MM, 0)RESULT_10, 
				   DECODE(SUBSTR(YYMM,5,6),'11', RESULT_MM, 0)RESULT_11,
				   DECODE(SUBSTR(YYMM,5,6),'12', RESULT_MM, 0)RESULT_12 
			FROM MM_MAINOBJ
			WHERE SUBSTR(YYMM,1,4) = YYYY:
			AND (SELECT ORGCD FROM ORG WHERE MAINOBJ_NO = ORG_NO) = ORGCD:		
		)	
		GROUP BY YYYY, ORGCD	
	)	
		UNION ALL
		SELECT YPLANCD, DYPLANCD, ACCTCD, ACCTKNAME, TOT_P,
		  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			   THEN AMT_01
		  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			   THEN AMT_01+AMT_02  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			   THEN AMT_01+AMT_02+AMT_03  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
			   THEN AMT_01+AMT_02+AMT_03+AMT_04+AMT_05+AMT_06+AMT_07+AMT_08+AMT_09+AMT_10+AMT_11+AMT_12 
			   ELSE 0 END MM_MON_TOT_P, 
	   	  CASE WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '01' 
			   THEN AMT_01_R
		  	   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '02' 
			   THEN AMT_01_R+AMT_02_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '03' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '04' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '05' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '06' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '07' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '08' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '09' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '10' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R  
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '11' 
			   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R
			   WHEN SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2) = '12' 
		   THEN AMT_01_R+AMT_02_R+AMT_03_R+AMT_04_R+AMT_05_R+AMT_06_R+AMT_07_R+AMT_08_R+AMT_09_R+AMT_10_R+AMT_11_R+AMT_12_R 
		   ELSE 0 END MM_MON_TOT_R, 
			AMT_01,
		    AMT_02,
		    AMT_03,
		    AMT_04,
		    AMT_05,
		    AMT_06,
		    AMT_07,
		    AMT_08,
		    AMT_09,
		    AMT_10,
		    AMT_11,
		    AMT_12,
		    AMT_01_R,
		    AMT_02_R,
		    AMT_03_R,
		    AMT_04_R,
		    AMT_05_R,
		    AMT_06_R,
		    AMT_07_R,
		    AMT_08_R,
		    AMT_09_R,
		    AMT_10_R,
		    AMT_11_R,
		    AMT_12_R
FROM(			
	SELECT CASE WHEN YPLANCD IS NULL THEN MAX(YPLANCD) OVER(PARTITION BY '' ORDER BY 1) ELSE YPLANCD END YPLANCD,
		   CASE WHEN DYPLANCD IS NULL THEN MAX(DYPLANCD) OVER(PARTITION BY '' ORDER BY 1) ELSE DYPLANCD END DYPLANCD,
		   ACCTCD, ACCTKNAME, 
		   SUM(TOT_P) TOT_P,
		   SUM(AMT_01) AMT_01,
		   SUM(AMT_02) AMT_02,
		   SUM(AMT_03) AMT_03,
		   SUM(AMT_04) AMT_04,
		   SUM(AMT_05) AMT_05,
		   SUM(AMT_06) AMT_06,
		   SUM(AMT_07) AMT_07,
		   SUM(AMT_08) AMT_08,
		   SUM(AMT_09) AMT_09,
		   SUM(AMT_10) AMT_10,
		   SUM(AMT_11) AMT_11,
		   SUM(AMT_12) AMT_12,
		   SUM(AMT_01_R) AMT_01_R,
		   SUM(AMT_02_R) AMT_02_R,
		   SUM(AMT_03_R) AMT_03_R,
		   SUM(AMT_04_R) AMT_04_R,
		   SUM(AMT_05_R) AMT_05_R,
		   SUM(AMT_06_R) AMT_06_R,
		   SUM(AMT_07_R) AMT_07_R,
		   SUM(AMT_08_R) AMT_08_R,
		   SUM(AMT_09_R) AMT_09_R,
		   SUM(AMT_10_R) AMT_10_R,
		   SUM(AMT_11_R) AMT_11_R,
		   SUM(AMT_12_R) AMT_12_R
	FROM(
		SELECT X.YPLANCD ,X.DYPLANCD, CASE WHEN X.ACCTCD LIKE '4%' THEN '40000' ELSE X.ACCTCD END ACCTCD, X.ACCTKNAME,
			   (DECODE(X.AMT_01,'',0,X.AMT_01)
			   +DECODE(X.AMT_02,'',0,X.AMT_02)
			   +DECODE(X.AMT_03,'',0,X.AMT_03)
			   +DECODE(X.AMT_04,'',0,X.AMT_04)
			   +DECODE(X.AMT_05,'',0,X.AMT_05)
			   +DECODE(X.AMT_06,'',0,X.AMT_06)
			   +DECODE(X.AMT_07,'',0,X.AMT_07)
			   +DECODE(X.AMT_08,'',0,X.AMT_08)
			   +DECODE(X.AMT_09,'',0,X.AMT_09)
			   +DECODE(X.AMT_10,'',0,X.AMT_10)
			   +DECODE(X.AMT_11,'',0,X.AMT_11)
			   +DECODE(X.AMT_12,'',0,X.AMT_12)
			   )TOT_P,
			   DECODE(X.AMT_01,'',0,X.AMT_01) AMT_01,
			   DECODE(X.AMT_02	,'',0,X.AMT_02) AMT_02,
			   DECODE(X.AMT_03	,'',0,X.AMT_03) AMT_03,
			   DECODE(X.AMT_04	,'',0,X.AMT_04) AMT_04,
			   DECODE(X.AMT_05	,'',0,X.AMT_05) AMT_05,
			   DECODE(X.AMT_06	,'',0,X.AMT_06) AMT_06,
			   DECODE(X.AMT_07	,'',0,X.AMT_07) AMT_07,
			   DECODE(X.AMT_08	,'',0,X.AMT_08) AMT_08,
			   DECODE(X.AMT_09	,'',0,X.AMT_09) AMT_09,
			   DECODE(X.AMT_10	,'',0,X.AMT_10) AMT_10,
			   DECODE(X.AMT_11	,'',0,X.AMT_11) AMT_11,
			   DECODE(X.AMT_12	,'',0,X.AMT_12) AMT_12,
			   DECODE(Y.AMT_01_R,'',0,Y.AMT_01_R) AMT_01_R,
			   DECODE(Y.AMT_02_R,'',0,Y.AMT_02_R) AMT_02_R,
			   DECODE(Y.AMT_03_R,'',0,Y.AMT_03_R) AMT_03_R,
			   DECODE(Y.AMT_04_R,'',0,Y.AMT_04_R) AMT_04_R,
			   DECODE(Y.AMT_05_R,'',0,Y.AMT_05_R) AMT_05_R,
			   DECODE(Y.AMT_06_R,'',0,Y.AMT_06_R) AMT_06_R,
			   DECODE(Y.AMT_07_R,'',0,Y.AMT_07_R) AMT_07_R,
			   DECODE(Y.AMT_08_R,'',0,Y.AMT_08_R) AMT_08_R,
			   DECODE(Y.AMT_09_R,'',0,Y.AMT_09_R) AMT_09_R,
			   DECODE(Y.AMT_10_R,'',0,Y.AMT_10_R) AMT_10_R,
			   DECODE(Y.AMT_11_R,'',0,Y.AMT_11_R) AMT_11_R,
			   DECODE(Y.AMT_12_R,'',0,Y.AMT_12_R) AMT_12_R 
			   --X.*, Y.*
		FROM
		(SELECT A.YPLANCD, 
				   A.DYPLANCD, 
				   B.ACCTCD, 
				   B.ACCTKNAME,
					A.AMT_01,
					A.AMT_02,
					A.AMT_03,
					A.AMT_04,
					A.AMT_05,
					A.AMT_06,
					A.AMT_07,
					A.AMT_08,
					A.AMT_09,
					A.AMT_10,
					A.AMT_11,
					A.AMT_12
			FROM(
				SELECT YPLANCD, DYPLANCD, ACCTCD,
				   SUM(AMT_01) AMT_01,
				   SUM(AMT_02) AMT_02,
				   SUM(AMT_03) AMT_03,
				   SUM(AMT_04) AMT_04,
				   SUM(AMT_05) AMT_05,
				   SUM(AMT_06) AMT_06,
				   SUM(AMT_07) AMT_07,
				   SUM(AMT_08) AMT_08,
				   SUM(AMT_09) AMT_09,
				   SUM(AMT_10) AMT_10,
				   SUM(AMT_11) AMT_11,
				   SUM(AMT_12) AMT_12
			FROM(	   	
				SELECT SUBSTR(YPLANCD,1,4) YPLANCD, 
					   DYPLANCD, 
					   SUBSTR(ACCTCD,1,4)||'0' ACCTCD,
					   AMT_01,
					   AMT_02,
					   AMT_03,
					   AMT_04,
					   AMT_05,
					   AMT_06,
					   AMT_07,
					   AMT_08,
					   AMT_09,
					   AMT_10,
					   AMT_11,
					   AMT_12 
				FROM BUDGETPLAN
				WHERE ISDEFAULT = 'C'
				AND DYPLANCD = ORGCD:
				AND SUBSTR(YPLANCD,1,4) = YYYY:
			)GROUP BY YPLANCD, DYPLANCD, ACCTCD
			)A,(
			SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' 
			   ELSE USRACCTNAME END ACCTKNAME, 
			   CASE WHEN USRACCTCD LIKE '4%' THEN USRACCTCD 
			   ELSE USRACCTCD END ACCTCD 
			FROM USRACCTDEFDETAIL
			WHERE USRTYPE = 'devPjt'
			AND USRACCTTYPE = 'C'
			AND USRACCTCD NOT IN ('92000','93000')
			)B
			WHERE A.ACCTCD(+) = B.ACCTCD
		)X, (
		SELECT A.YEAR, 
			   A.ORGNO, 
			   A.ORGCD, 
			   B.ACCTCD, 
			   B.ACCTKNAME,
				A.AMT_01_R,
				A.AMT_02_R,
				A.AMT_03_R,
				A.AMT_04_R,
				A.AMT_05_R,
				A.AMT_06_R,
				A.AMT_07_R,
				A.AMT_08_R,
				A.AMT_09_R,
				A.AMT_10_R,
				A.AMT_11_R,
				A.AMT_12_R
		FROM(
			SELECT YEAR, ORGNO, ORGCD,  ACCTCD,
				   SUM(AMT_01_R) AMT_01_R,
				   SUM(AMT_02_R) AMT_02_R,
				   SUM(AMT_03_R) AMT_03_R,
				   SUM(AMT_04_R) AMT_04_R,
				   SUM(AMT_05_R) AMT_05_R,
				   SUM(AMT_06_R) AMT_06_R,
				   SUM(AMT_07_R) AMT_07_R,
				   SUM(AMT_08_R) AMT_08_R,
				   SUM(AMT_09_R) AMT_09_R,
				   SUM(AMT_10_R) AMT_10_R,
				   SUM(AMT_11_R) AMT_11_R,
				   SUM(AMT_12_R) AMT_12_R
			FROM(	   
				  SELECT YEAR, 
				  	   MONTH, 
				  	   ORIGINORG_NO ORGNO,
				  	   (SELECT ORGCD FROM ORG WHERE ORIGINORG_NO = ORG_NO) ORGCD, 
				  	   SUBSTR(ACCTCD,1,4)||'0' ACCTCD,
				  	    SUM(DECODE(MONTH, 01, AMT,0)) AMT_01_R,
				  		SUM(DECODE(MONTH, 02, AMT,0)) AMT_02_R,
				  		SUM(DECODE(MONTH, 03, AMT,0)) AMT_03_R,
				  		SUM(DECODE(MONTH, 04, AMT,0)) AMT_04_R,
				  		SUM(DECODE(MONTH, 05, AMT,0)) AMT_05_R,
				  		SUM(DECODE(MONTH, 06, AMT,0)) AMT_06_R,
				  		SUM(DECODE(MONTH, 07, AMT,0)) AMT_07_R,
				  		SUM(DECODE(MONTH, 08, AMT,0)) AMT_08_R,
				  		SUM(DECODE(MONTH, 09, AMT,0)) AMT_09_R,
				  		SUM(DECODE(MONTH, 10, AMT,0)) AMT_10_R,
				  		SUM(DECODE(MONTH, 11, AMT,0)) AMT_11_R,
				  		SUM(DECODE(MONTH, 12, AMT,0)) AMT_12_R
				  FROM ACCT_COSTARTS_ORG
				  WHERE YEAR = YYYY:
				  AND COSTTYPE = 'D'
				  AND (SELECT ORGCD FROM ORG WHERE ORIGINORG_NO = ORG_NO) = ORGCD:
				  GROUP BY YEAR, MONTH, ACCTCD,ORIGINORG_NO 
			)GROUP BY YEAR, ORGNO, ORGCD, ACCTCD
			)A,(
			SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' 
			   ELSE USRACCTNAME END ACCTKNAME, 
			   CASE WHEN USRACCTCD LIKE '4%' THEN USRACCTCD 
			   ELSE USRACCTCD END ACCTCD 
			FROM USRACCTDEFDETAIL
			WHERE USRTYPE = 'devPjt'
			AND USRACCTTYPE = 'C'
			)B
			WHERE A.ACCTCD(+) = B.ACCTCD
		)Y
		WHERE X.ACCTCD = Y.ACCTCD
	)GROUP BY YPLANCD, DYPLANCD, ACCTCD , ACCTKNAME
) ORDER BY ACCTCD	 
	]]>
	</sql-content>
	</sql-mapping>

	<sql-mapping  id="R_000"   value-count="1" url="PROJECT 검색" >  
	<sql-content>
	<![CDATA[
		SELECT PJT_NO, PJTCD, PJTNAME, TO_CHAR(PJTUPDATEDTM,'YYYY-MM-DD HH:MM:SS')AS PJTUPDATEDTM, CONTSTARTDT, CONTENDDT
		FROM PROJECT
		WHERE PJT_NO = ?
	]]>
	</sql-content>
	</sql-mapping>

	<sql-mapping  id="R_100"   value-count="0" url="PJT별 실적조회(부문)PLAN" >  
	<sql-content>
	<![CDATA[
		SELECT 'GIS' NAME, 'G' PJTDIV, ACCTKNAME, 
			   ROUND(SUM(MON_01)*0.001) MON_01, 
			   ROUND(SUM(MON_02)*0.001) MON_02,
			   ROUND(SUM(MON_03)*0.001) MON_03,
			   ROUND(SUM(MON_04)*0.001) MON_04,
			   ROUND(SUM(MON_05)*0.001) MON_05,
			   ROUND(SUM(MON_06)*0.001) MON_06,
			   ROUND(SUM(MON_07)*0.001) MON_07,
			   ROUND(SUM(MON_08)*0.001) MON_08,
			   ROUND(SUM(MON_09)*0.001) MON_09,
			   ROUND(SUM(MON_10)*0.001) MON_10,
			   ROUND(SUM(MON_11)*0.001) MON_11,
			   ROUND(SUM(MON_12)*0.001) MON_12,
			   ROUND(SUM(MON_TOT)*0.001) MON_TOT
			 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
			 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
		FROM(	
			SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
			   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
			   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
			   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME, 
			  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
				   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
				   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
				   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
			FROM(	
				SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
						SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
				FROM(			
					SELECT ACCTCD, AMT, 
						   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
						   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
					FROM(	
						SELECT DISTINCT A.YEAR, A.MONTH, A.ACCTCD, 
							   SUM(A.AMT) OVER(PARTITION BY A.AMT ORDER BY A.YEAR, A.MONTH, A.ACCTCD) AMT,
							   MAX(A.YEAR) OVER (PARTITION BY A.ACCTCD )AS MAX_YEAR
						FROM PJTCOSTDETAIL A, PROJECT B--계획
						WHERE A.PJT_NO = B.PJT_NO 
						AND A.COSTTYPE = 'T'
						AND B.PJTDIV='G'				
						AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM PJTCOSTDETAIL
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)				
						--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
						)								
					)A	
					, (
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
					)B
					WHERE A.ACCTCD(+) = B.ACCTCD
				)ORDER BY NO
			)GROUP BY no, ACCTKNAME
		UNION ALL
		SELECT 'SI' NAME,'S' PJTDIV, ACCTKNAME, 
			   ROUND(SUM(MON_01)*0.001) MON_01, 
			   ROUND(SUM(MON_02)*0.001) MON_02,
			   ROUND(SUM(MON_03)*0.001) MON_03,
			   ROUND(SUM(MON_04)*0.001) MON_04,
			   ROUND(SUM(MON_05)*0.001) MON_05,
			   ROUND(SUM(MON_06)*0.001) MON_06,
			   ROUND(SUM(MON_07)*0.001) MON_07,
			   ROUND(SUM(MON_08)*0.001) MON_08,
			   ROUND(SUM(MON_09)*0.001) MON_09,
			   ROUND(SUM(MON_10)*0.001) MON_10,
			   ROUND(SUM(MON_11)*0.001) MON_11,
			   ROUND(SUM(MON_12)*0.001) MON_12,
			   ROUND(SUM(MON_TOT)*0.001) MON_TOT
			 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
			 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
		FROM(	
			SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
			   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
			   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
			   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME, 
			  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
				   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
				   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
				   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
			FROM(	
				SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
						SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
				FROM(			
					SELECT ACCTCD, AMT, 
						   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
						   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
					FROM(	
						SELECT DISTINCT A.YEAR, A.MONTH, A.ACCTCD, 
							   SUM(A.AMT) OVER(PARTITION BY A.AMT ORDER BY A.YEAR, A.MONTH, A.ACCTCD) AMT,
							   MAX(A.YEAR) OVER (PARTITION BY A.ACCTCD )AS MAX_YEAR
						FROM PJTCOSTDETAIL A, PROJECT B--계획
						WHERE A.PJT_NO = B.PJT_NO 
						AND A.COSTTYPE = 'T'
						AND B.PJTDIV='S'
						AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM PJTCOSTDETAIL
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)								
						--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
						)								
					)A	
					, (
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
					)B
					WHERE A.ACCTCD(+) = B.ACCTCD
				)ORDER BY NO
			)GROUP BY no, ACCTKNAME
		UNION ALL
		SELECT 'ITO' NAME,'I' PJTDIV, ACCTKNAME, 
			   ROUND(SUM(MON_01)*0.001) MON_01, 
			   ROUND(SUM(MON_02)*0.001) MON_02,
			   ROUND(SUM(MON_03)*0.001) MON_03,
			   ROUND(SUM(MON_04)*0.001) MON_04,
			   ROUND(SUM(MON_05)*0.001) MON_05,
			   ROUND(SUM(MON_06)*0.001) MON_06,
			   ROUND(SUM(MON_07)*0.001) MON_07,
			   ROUND(SUM(MON_08)*0.001) MON_08,
			   ROUND(SUM(MON_09)*0.001) MON_09,
			   ROUND(SUM(MON_10)*0.001) MON_10,
			   ROUND(SUM(MON_11)*0.001) MON_11,
			   ROUND(SUM(MON_12)*0.001) MON_12,
			   ROUND(SUM(MON_TOT)*0.001) MON_TOT
		  	 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
			 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
		FROM(	
			SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
			   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
			   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
			   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME, 
			  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
				   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
				   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
				   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
			FROM(	
				SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
						SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
				FROM(			
					SELECT ACCTCD, AMT, 
						   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
						   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
					FROM(	
						SELECT DISTINCT A.YEAR, A.MONTH, A.ACCTCD, 
							   SUM(A.AMT) OVER(PARTITION BY A.AMT ORDER BY A.YEAR, A.MONTH, A.ACCTCD) AMT,
							   MAX(A.YEAR) OVER (PARTITION BY A.ACCTCD )AS MAX_YEAR
						FROM PJTCOSTDETAIL A, PROJECT B--계획
						WHERE A.PJT_NO = B.PJT_NO 
						AND A.COSTTYPE = 'T'
						AND B.PJTDIV='I'	
						AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM PJTCOSTDETAIL
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)							
						--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
						)								
					)A	
					, (
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
					)B
					WHERE A.ACCTCD(+) = B.ACCTCD
				)ORDER BY NO
			)GROUP BY no, ACCTKNAME
		UNION ALL
		SELECT 'ALL' NAME,'A' PJTDIV, ACCTKNAME, 
			   ROUND(SUM(MON_01)*0.001) MON_01, 
			   ROUND(SUM(MON_02)*0.001) MON_02,
			   ROUND(SUM(MON_03)*0.001) MON_03,
			   ROUND(SUM(MON_04)*0.001) MON_04,
			   ROUND(SUM(MON_05)*0.001) MON_05,
			   ROUND(SUM(MON_06)*0.001) MON_06,
			   ROUND(SUM(MON_07)*0.001) MON_07,
			   ROUND(SUM(MON_08)*0.001) MON_08,
			   ROUND(SUM(MON_09)*0.001) MON_09,
			   ROUND(SUM(MON_10)*0.001) MON_10,
			   ROUND(SUM(MON_11)*0.001) MON_11,
			   ROUND(SUM(MON_12)*0.001) MON_12,
			   ROUND(SUM(MON_TOT)*0.001) MON_TOT
			 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
			 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
		FROM(	
			SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
			   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
			   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
			   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME, 
			  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
				   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
				   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
				   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
			FROM(	
				SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
						SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
				FROM(			
					SELECT ACCTCD, AMT, 
						   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
						   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
					FROM(	
						SELECT DISTINCT A.YEAR, A.MONTH, A.ACCTCD, 
							   SUM(A.AMT) OVER(PARTITION BY A.AMT ORDER BY A.YEAR, A.MONTH, A.ACCTCD) AMT,
							   MAX(A.YEAR) OVER (PARTITION BY A.ACCTCD )AS MAX_YEAR
						FROM PJTCOSTDETAIL A, PROJECT B--계획
						WHERE A.PJT_NO = B.PJT_NO 
						AND A.COSTTYPE = 'T'
						AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM PJTCOSTDETAIL
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)				
		--				AND B.PJTDIV='G'				
						--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
						)								
					)A	
					, (
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
					)B
					WHERE A.ACCTCD(+) = B.ACCTCD
				)ORDER BY NO
			)GROUP BY no, ACCTKNAME
	]]>
	</sql-content>
	</sql-mapping>
	
	<sql-mapping  id="R_101"   value-count="0" url="PJT별 실적조회(부문)RESULT" >  
	<sql-content>
	<![CDATA[
		SELECT 'GIS' NAME,'G' PJTDIV,ACCTKNAME, 
		   ROUND(SUM(MON_01)*0.001) MON_01, 
		   ROUND(SUM(MON_02)*0.001) MON_02,
		   ROUND(SUM(MON_03)*0.001) MON_03,
		   ROUND(SUM(MON_04)*0.001) MON_04,
		   ROUND(SUM(MON_05)*0.001) MON_05,
		   ROUND(SUM(MON_06)*0.001) MON_06,
		   ROUND(SUM(MON_07)*0.001) MON_07,
		   ROUND(SUM(MON_08)*0.001) MON_08,
		   ROUND(SUM(MON_09*0.001)) MON_09,
		   ROUND(SUM(MON_10)*0.001) MON_10,
		   ROUND(SUM(MON_11)*0.001) MON_11,
		   ROUND(SUM(MON_12)*0.001) MON_12,
		   ROUND(SUM(MON_TOT)*0.001) MON_TOT
		 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
		 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
	FROM(		
		SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
		   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
		   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
		   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME,
		  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
			   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
			   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
			   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
		FROM(	
			SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
					SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
			FROM(				
				SELECT ACCTCD, AMT,
					   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
					   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
				FROM(	
					SELECT DISTINCT YEAR, MONTH, SUBSTR(ACCTCD,1,4)||'0' AS ACCTCD, 
						   SUM(AMT) OVER(PARTITION BY (SUBSTR(ACCTCD,1,4)||'0'), YEAR, MONTH) AMT,
						   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
					FROM COSTACTUALRESULTS_PJT A, PROJECT B --실적
					WHERE A.PJT_NO = B.PJT_NO
					AND B.PJTDIV = 'G'
					AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM COSTACTUALRESULTS_PJT
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)				
					--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE				
					)				
				)A	
				, (			
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
				)B
				WHERE A.ACCTCD(+) = B.ACCTCD
			)ORDER BY NO
		)GROUP BY NO, ACCTKNAME	
	UNION ALL
	SELECT 'SI' NAME,'S' PJTDIV,ACCTKNAME, 
		   ROUND(SUM(MON_01)*0.001) MON_01, 
		   ROUND(SUM(MON_02)*0.001) MON_02,
		   ROUND(SUM(MON_03)*0.001) MON_03,
		   ROUND(SUM(MON_04)*0.001) MON_04,
		   ROUND(SUM(MON_05)*0.001) MON_05,
		   ROUND(SUM(MON_06)*0.001) MON_06,
		   ROUND(SUM(MON_07)*0.001) MON_07,
		   ROUND(SUM(MON_08)*0.001) MON_08,
		   ROUND(SUM(MON_09)*0.001) MON_09,
		   ROUND(SUM(MON_10)*0.001) MON_10,
		   ROUND(SUM(MON_11)*0.001) MON_11,
		   ROUND(SUM(MON_12)*0.001) MON_12,
		   ROUND(SUM(MON_TOT)*0.001) MON_TOT
		 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
		 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
	FROM(		
		SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
		   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
		   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
		   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME,
		  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
			   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
			   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
			   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
		FROM(	
			SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
					SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
			FROM(				
				SELECT ACCTCD, AMT,
					   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
					   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
				FROM(	
					SELECT DISTINCT YEAR, MONTH, SUBSTR(ACCTCD,1,4)||'0' AS ACCTCD, 
						   SUM(AMT) OVER(PARTITION BY (SUBSTR(ACCTCD,1,4)||'0'), YEAR, MONTH) AMT,
						   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
					FROM COSTACTUALRESULTS_PJT A, PROJECT B --실적
					WHERE A.PJT_NO = B.PJT_NO
					AND B.PJTDIV = 'S'
					AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM COSTACTUALRESULTS_PJT
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)	
					--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE				
					)				
				)A	
				, (		
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 	
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
				)B
				WHERE A.ACCTCD(+) = B.ACCTCD
			)ORDER BY NO
		)GROUP BY NO, ACCTKNAME		
	UNION ALL
	SELECT 'ITO' NAME,'I' PJTDIV,ACCTKNAME, 
		   ROUND(SUM(MON_01)*0.001) MON_01, 
		   ROUND(SUM(MON_02)*0.001) MON_02,
		   ROUND(SUM(MON_03)*0.001) MON_03,
		   ROUND(SUM(MON_04)*0.001) MON_04,
		   ROUND(SUM(MON_05)*0.001) MON_05,
		   ROUND(SUM(MON_06)*0.001) MON_06,
		   ROUND(SUM(MON_07)*0.001) MON_07,
		   ROUND(SUM(MON_08)*0.001) MON_08,
		   ROUND(SUM(MON_09)*0.001) MON_09,
		   ROUND(SUM(MON_10)*0.001) MON_10,
		   ROUND(SUM(MON_11)*0.001) MON_11,
		   ROUND(SUM(MON_12)*0.001) MON_12,
		   ROUND(SUM(MON_TOT)*0.001) MON_TOT
		 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
		 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
	FROM(		
		SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
		   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
		   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
		   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME,
		  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
			   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
			   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
			   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
		FROM(	
			SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
					SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
			FROM(				
				SELECT ACCTCD, AMT,
					   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
					   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
				FROM(	
					SELECT DISTINCT YEAR, MONTH, SUBSTR(ACCTCD,1,4)||'0' AS ACCTCD, 
						   SUM(AMT) OVER(PARTITION BY (SUBSTR(ACCTCD,1,4)||'0'), YEAR, MONTH) AMT,
						   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
					FROM COSTACTUALRESULTS_PJT A, PROJECT B --실적
					WHERE A.PJT_NO = B.PJT_NO
					AND B.PJTDIV = 'I'
					AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM COSTACTUALRESULTS_PJT
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)	
					--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE				
					)				
				)A	
				, (			
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
				)B
				WHERE A.ACCTCD(+) = B.ACCTCD
			)ORDER BY NO
		)GROUP BY NO, ACCTKNAME		
	UNION ALL
	SELECT 'ALL' NAME,'A' PJTDIV,ACCTKNAME, 
		   ROUND(SUM(MON_01)*0.001) MON_01, 
		   ROUND(SUM(MON_02)*0.001) MON_02,
		   ROUND(SUM(MON_03)*0.001) MON_03,
		   ROUND(SUM(MON_04)*0.001) MON_04,
		   ROUND(SUM(MON_05)*0.001) MON_05,
		   ROUND(SUM(MON_06)*0.001) MON_06,
		   ROUND(SUM(MON_07)*0.001) MON_07,
		   ROUND(SUM(MON_08)*0.001) MON_08,
		   ROUND(SUM(MON_09)*0.001) MON_09,
		   ROUND(SUM(MON_10)*0.001) MON_10,
		   ROUND(SUM(MON_11)*0.001) MON_11,
		   ROUND(SUM(MON_12)*0.001) MON_12,
		   ROUND(SUM(MON_TOT)*0.001) MON_TOT
		 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
		 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
	FROM(		
		SELECT CASE WHEN ACCTKNAME = '매출액' THEN '01' 
		   	   WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '02'  
		   	   WHEN ACCTKNAME = '부문공통비' THEN '03' ELSE '04' END AS NO,
		   	   CASE WHEN ACCTCD LIKE '5%' OR ACCTCD LIKE '90%' THEN '직접원가' ELSE ACCTKNAME END ACCTKNAME,
		  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
			   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
			   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
			   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
		FROM(	
			SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
					SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
			FROM(				
				SELECT ACCTCD, AMT,
					   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
					   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
				FROM(	
					SELECT DISTINCT YEAR, MONTH, SUBSTR(ACCTCD,1,4)||'0' AS ACCTCD, 
						   SUM(AMT) OVER(PARTITION BY (SUBSTR(ACCTCD,1,4)||'0'), YEAR, MONTH) AMT,
						   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
					FROM COSTACTUALRESULTS_PJT A, PROJECT B --실적
					WHERE A.PJT_NO = B.PJT_NO
					AND YEAR IN (
							SELECT YEAR
							FROM(
								SELECT DISTINCT YEAR 
								FROM COSTACTUALRESULTS_PJT
								WHERE YEAR <= TO_CHAR(SYSDATE,'YYYY')
								ORDER BY 1 DESC
							)
							WHERE ROWNUM < 3
						)	
					--AND B.PJTDIV = 'G'
					--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE				
					)				
				)A	
				, (		
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 	
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 					
				)B
				WHERE A.ACCTCD(+) = B.ACCTCD
			)ORDER BY NO
		)GROUP BY NO, ACCTKNAME		
		]]>
		</sql-content>
		</sql-mapping>
	
		<sql-mapping  id="R_001"   value-count="1" url="PJT별 세부조회 계획 : 비목검색" >  
		<sql-content>
		<![CDATA[
			SELECT ACCTCD, ACCTKNAME, 
				   ROUND(SUM(MON_01)*0.001) MON_01, 
				   ROUND(SUM(MON_02)*0.001) MON_02,
				   ROUND(SUM(MON_03)*0.001) MON_03,
				   ROUND(SUM(MON_04)*0.001) MON_04,
				   ROUND(SUM(MON_05)*0.001) MON_05,
				   ROUND(SUM(MON_06)*0.001) MON_06,
				   ROUND(SUM(MON_07)*0.001) MON_07,
				   ROUND(SUM(MON_08)*0.001) MON_08,
				   ROUND(SUM(MON_09)*0.001) MON_09,
				   ROUND(SUM(MON_10)*0.001) MON_10,
				   ROUND(SUM(MON_11)*0.001) MON_11,
				   ROUND(SUM(MON_12)*0.001) MON_12,
				   ROUND(SUM(MON_TOT)*0.001) MON_TOT
				 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
				 , ROUND(SUM(ALL_TOT)*0.001) ALL_PLAN_TOT
			FROM(		
				SELECT ACCTCD, ACCTKNAME,
				  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
					   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
					   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
					   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
					   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
				FROM(	
					SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
							SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
					FROM(	
						SELECT ACCTCD, AMT,
							   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
							   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
						FROM(	
							SELECT DISTINCT YEAR, MONTH, ACCTCD, 
								   SUM(AMT) OVER(PARTITION BY AMT ORDER BY YEAR, MONTH, ACCTCD) AMT,
								   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
							FROM PJTCOSTDETAIL --계획
							WHERE COSTTYPE = 'T'
							AND PJT_NO = ?  -- pjt_no
							--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
							)
						)A	
						, (
							SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
							CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
							--SELECT USRACCTCD ACCTCD, USRACCTNAME ACCTKNAME
							FROM USRACCTDEFDETAIL
							WHERE USRTYPE = 'devPjt'
							AND USRACCTTYPE = 'C'
							ORDER BY USRINDEX
						)B
						WHERE A.ACCTCD(+) = B.ACCTCD
					)
				)GROUP BY ACCTCD, ACCTKNAME			
	]]>
	</sql-content>
	</sql-mapping>
	
	<sql-mapping  id="R_002"   value-count="1" url="PJT별 List" >  
	<sql-content>
	<![CDATA[
		SELECT PJT_NO, PJTNAME, PJTCD,
			   ROUND(SUM(NVL(DECODE(B.ACCTKNAME, '매출액',AMT),0))*0.001) AS SALES,
			   ROUND(SUM(NVL(DECODE(B.ACCTKNAME, '직접원가',AMT),0))*0.001) AS DIRECT,
			   ROUND(SUM(NVL(DECODE(B.ACCTKNAME, '부문간접비',AMT),0))*0.001) AS INDIRECT,
			   ROUND(SUM(NVL(DECODE(B.ACCTKNAME, '일반관리비',AMT),0))*0.001) AS GENERAL
			FROM(								
				SELECT YEAR, MONTH, A.PJT_NO, AMT, PJTNAME,B.PJTCD,
				CASE WHEN ACCTCD LIKE '5%' OR ACCTCD='90310' THEN '직접원가' ELSE ACCTCD END ACCTKNAME 
				FROM COSTACTUALRESULTS_PJT A, PROJECT B
				WHERE A.PJT_NO = B.PJT_NO
				AND B.PJTDIV = ? --GIS
				--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
			)A,(	
				SELECT DISTINCT CASE WHEN USRACCTCD LIKE '5%' OR USRACCTCD='90310' THEN '직접원가' 
				ELSE USRACCTNAME END ACCTKNAME
				FROM USRACCTDEFDETAIL
				WHERE USRTYPE = 'devPjt'
				AND USRACCTTYPE = 'C'
				)B
			WHERE A.ACCTKNAME(+) = B.ACCTKNAME		
			GROUP BY PJT_NO, PJTNAME, PJTCD
	]]>
	</sql-content>
	</sql-mapping>
	
	<sql-mapping  id="R_031"   value-count="1" url="PJT별 실적조회 : 주요비목 계획" >  
	<sql-content>
	<![CDATA[
		SELECT ACCTKNAME, 
			   ROUND(SUM(MON_01)*0.001) MON_01, 
			   ROUND(SUM(MON_02)*0.001) MON_02,
			   ROUND(SUM(MON_03)*0.001) MON_03,
			   ROUND(SUM(MON_04)*0.001) MON_04,
			   ROUND(SUM(MON_05)*0.001) MON_05,
			   ROUND(SUM(MON_06)*0.001) MON_06,
			   ROUND(SUM(MON_07)*0.001) MON_07,
			   ROUND(SUM(MON_08)*0.001) MON_08,
			   ROUND(SUM(MON_09)*0.001) MON_09,
			   ROUND(SUM(MON_10)*0.001) MON_10,
			   ROUND(SUM(MON_11)*0.001) MON_11,
			   ROUND(SUM(MON_12)*0.001) MON_12,
			   ROUND(SUM(MON_TOT)*0.001) MON_TOT
			 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
			 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
		FROM(		
			SELECT  ACCTKNAME,
			  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_01 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_02 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_03 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_04 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_05 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_06 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_07 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_08 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_09 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_10 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_11 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_12 ,
				   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR,MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_TOT
				   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR,MONTH ORDER BY ACCTKNAME,YEAR, MONTH) ELSE 0 END LAST_YEAR
				   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME ORDER BY ACCTKNAME) ELSE 0 END ALL_TOT
			FROM(	
				SELECT  CASE WHEN B.ACCTCD ='50010' THEN '1.상품원가' 
				   		WHEN B.ACCTCD IN ('50020','50030','50030','50040','50060') THEN '2.인건비'
				   		WHEN B.ACCTCD ='50050' THEN '3.잡급'
				   		WHEN B.ACCTCD ='50110' THEN '4.위탁용역비'
				   		WHEN B.ACCTCD ='50140' THEN '5.복리후생비'
				   		WHEN B.ACCTCD ='50150' THEN '6.급식비'
				   		WHEN B.ACCTCD ='50160' THEN '7.교통여비'
				   		WHEN B.ACCTCD ='50260' THEN '8.접대비'	
						WHEN B.ACCTCD ='92000' THEN B.ACCTKNAME	
						WHEN B.ACCTCD ='93000' THEN B.ACCTKNAME	
						WHEN B.ACCTCD ='10000' THEN '0.'||B.ACCTKNAME		
				   		ELSE '9.제비용' END ACCTKNAME, 
						B.ACCTCD, A.YEAR, A.MONTH , 
						SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
				FROM(	
					SELECT ACCTCD, AMT,
						   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
						   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
					FROM(	
						SELECT DISTINCT YEAR, MONTH, ACCTCD, 
							   SUM(AMT) OVER(PARTITION BY AMT ORDER BY YEAR, MONTH, ACCTCD) AMT,
							   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
						FROM PJTCOSTDETAIL --계획
						WHERE COSTTYPE = 'T'
						AND PJT_NO = ?   -- PJT_NO
						--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
						)
					)A	
					, (			
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
					)B
					WHERE A.ACCTCD(+) = B.ACCTCD	
				)		
			)GROUP BY  ACCTKNAME	
	]]>
	</sql-content>
	</sql-mapping>

	<sql-mapping  id="R_032"   value-count="1" url="PJT별 실적조회 : 주요비목 실적" >  
	<sql-content>
	<![CDATA[
		SELECT ACCTKNAME, 
		   ROUND(SUM(MON_01)*0.001) MON_01, 
		   ROUND(SUM(MON_02)*0.001) MON_02,
		   ROUND(SUM(MON_03)*0.001) MON_03,
		   ROUND(SUM(MON_04)*0.001) MON_04,
		   ROUND(SUM(MON_05)*0.001) MON_05,
		   ROUND(SUM(MON_06)*0.001) MON_06,
		   ROUND(SUM(MON_07)*0.001) MON_07,
		   ROUND(SUM(MON_08)*0.001) MON_08,
		   ROUND(SUM(MON_09)*0.001) MON_09,
		   ROUND(SUM(MON_10)*0.001) MON_10,
		   ROUND(SUM(MON_11)*0.001) MON_11,
		   ROUND(SUM(MON_12)*0.001) MON_12,
		   ROUND(SUM(MON_TOT)*0.001) MON_TOT
		 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
		 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
	FROM(		
		SELECT  ACCTKNAME,
		  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_01 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_02 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_03 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_04 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_05 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_06 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_07 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_08 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_09 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_10 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_11 ,
			   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR, MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_12 ,
			   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR,MONTH ORDER BY ACCTKNAME) ELSE 0 END MON_TOT
			   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME, YEAR,MONTH ORDER BY ACCTKNAME,YEAR, MONTH) ELSE 0 END LAST_YEAR
			   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTKNAME ORDER BY ACCTKNAME) ELSE 0 END ALL_TOT
		FROM(	
			SELECT  CASE WHEN B.ACCTCD ='50010' THEN '1.상품원가' 
			   		WHEN B.ACCTCD IN ('50020','50030','50030','50040','50060') THEN '2.인건비'
			   		WHEN B.ACCTCD ='50050' THEN '3.잡급'
			   		WHEN B.ACCTCD ='50110' THEN '4.위탁용역비'
			   		WHEN B.ACCTCD ='50140' THEN '5.복리후생비'
			   		WHEN B.ACCTCD ='50150' THEN '6.급식비'
			   		WHEN B.ACCTCD ='50160' THEN '7.교통여비'
			   		WHEN B.ACCTCD ='50260' THEN '8.접대비'	
					WHEN B.ACCTCD ='92000' THEN B.ACCTKNAME	
					WHEN B.ACCTCD ='93000' THEN B.ACCTKNAME	
					WHEN B.ACCTCD ='10000' THEN '0.'||B.ACCTKNAME		
			   		ELSE '9.제비용' END ACCTKNAME, 
					B.ACCTCD, A.YEAR, A.MONTH , 
					SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
			FROM(	
				SELECT ACCTCD, AMT,
					   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
					   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
				FROM(	
					SELECT DISTINCT YEAR, MONTH, ACCTCD, 
						   SUM(AMT) OVER(PARTITION BY AMT ORDER BY YEAR, MONTH, ACCTCD) AMT,
						   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
					FROM COSTACTUALRESULTS_PJT --실적
					WHERE COSTTYPE = 'T'
					AND PJT_NO = ?
					--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
					)
				)A	
				, (			
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
				)B
				WHERE A.ACCTCD(+) = B.ACCTCD	
			)		
		)GROUP BY  ACCTKNAME		
	]]>
	</sql-content>
	</sql-mapping>
	
		<sql-mapping  id="R_021"   value-count="1" url="PJT별 실적조회 : 비목 계획" >  
	<sql-content>
	<![CDATA[
		SELECT ACCTCD, ACCTKNAME, 
			   ROUND(SUM(MON_01)*0.001) MON_01, 
			   ROUND(SUM(MON_02)*0.001) MON_02,
			   ROUND(SUM(MON_03)*0.001) MON_03,
			   ROUND(SUM(MON_04)*0.001) MON_04,
			   ROUND(SUM(MON_05)*0.001) MON_05,
			   ROUND(SUM(MON_06)*0.001) MON_06,
			   ROUND(SUM(MON_07)*0.001) MON_07,
			   ROUND(SUM(MON_08)*0.001) MON_08,
			   ROUND(SUM(MON_09)*0.001) MON_09,
			   ROUND(SUM(MON_10)*0.001) MON_10,
			   ROUND(SUM(MON_11)*0.001) MON_11,
			   ROUND(SUM(MON_12)*0.001) MON_12,
			   ROUND(SUM(MON_TOT)*0.001) MON_TOT
			 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
			 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
		FROM(		
			SELECT ACCTCD, ACCTKNAME,
			  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
				   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
				   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
				   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
			FROM(	
				SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
						SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
				FROM(	
					SELECT ACCTCD, AMT,
						   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
						   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
					FROM(	
						SELECT DISTINCT YEAR, MONTH, ACCTCD, 
							   SUM(AMT) OVER(PARTITION BY AMT ORDER BY YEAR, MONTH, ACCTCD) AMT,
							   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
						FROM PJTCOSTDETAIL --계획
						WHERE COSTTYPE = 'T'
						AND PJT_NO = ?
						--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE
						)
					)A	
					, (
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
					)B
					WHERE A.ACCTCD(+) = B.ACCTCD
				)
			)GROUP BY ACCTCD, ACCTKNAME			
	]]>
	</sql-content>
	</sql-mapping>

	<sql-mapping  id="R_022"   value-count="1" url="PJT별 실적조회 : 비목 실적" >  
	<sql-content>
	<![CDATA[
		SELECT ACCTCD, ACCTKNAME, 
			   ROUND(SUM(MON_01)*0.001) MON_01, 
			   ROUND(SUM(MON_02)*0.001) MON_02,
			   ROUND(SUM(MON_03)*0.001) MON_03,
			   ROUND(SUM(MON_04)*0.001) MON_04,
			   ROUND(SUM(MON_05)*0.001) MON_05,
			   ROUND(SUM(MON_06)*0.001) MON_06,
			   ROUND(SUM(MON_07)*0.001) MON_07,
			   ROUND(SUM(MON_08)*0.001) MON_08,
			   ROUND(SUM(MON_09)*0.001) MON_09,
			   ROUND(SUM(MON_10)*0.001) MON_10,
			   ROUND(SUM(MON_11)*0.001) MON_11,
			   ROUND(SUM(MON_12)*0.001) MON_12,
			   ROUND(SUM(MON_TOT)*0.001) MON_TOT
			 , ROUND(SUM(LAST_YEAR)*0.001) LAST_YEAR_TOT
			 , ROUND(SUM(ALL_TOT)*0.001) ALL_TOT
		FROM(		
			SELECT ACCTCD, ACCTKNAME,
			  	   CASE WHEN YEAR = YEAR AND MONTH = '01' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_01 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '02' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_02 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '03' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_03 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '04' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_04 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '05' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_05 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '06' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_06 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '07' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_07 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '08' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_08 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '09' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_09 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '10' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_10 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '11' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_11 ,
				   CASE WHEN YEAR = YEAR AND MONTH = '12' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR, MONTH ORDER BY ACCTCD) ELSE 0 END MON_12 ,
				   CASE WHEN YEAR = YEAR AND MONTH != '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD) ELSE 0 END MON_TOT
				   , CASE WHEN YEAR = '전년'  AND MONTH = '전월' THEN SUM(AMT) OVER(PARTITION BY ACCTCD, YEAR,MONTH ORDER BY ACCTCD,YEAR, MONTH) ELSE 0 END LAST_YEAR
				   , CASE WHEN YEAR = '전년' OR YEAR = YEAR THEN SUM(AMT) OVER(PARTITION BY ACCTCD ORDER BY ACCTCD) ELSE 0 END ALL_TOT
			FROM(	
				SELECT  B.ACCTCD, B.ACCTKNAME, A.YEAR, A.MONTH , 
						SUM(A.AMT) OVER(PARTITION BY B.ACCTCD, YEAR, MONTH) AMT
				FROM(				
					SELECT ACCTCD, AMT,
						   CASE WHEN YEAR = MAX_YEAR THEN YEAR ELSE '전년' END YEAR,
						   CASE WHEN YEAR = MAX_YEAR THEN MONTH ELSE '전월' END MONTH
					FROM(	
						SELECT DISTINCT YEAR, MONTH, SUBSTR(ACCTCD,1,4)||'0' AS ACCTCD, 
							   SUM(AMT) OVER(PARTITION BY (SUBSTR(ACCTCD,1,4)||'0'), YEAR, MONTH) AMT,
							   MAX(YEAR) OVER (PARTITION BY ACCTCD )AS MAX_YEAR
						FROM COSTACTUALRESULTS_PJT --실적
						WHERE PJT_NO = ?
						--AND YEAR||MONTH <= TO_CHAR(SYSDATE,'YYYYMM') -- UNTIL SYSDATE				
						)				
					)A	
					, (			
						SELECT CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME, 
						CASE WHEN USRACCTCD LIKE '4%' THEN '10000' ELSE USRACCTCD END ACCTCD 
						--SELECT USRACCTCD ACCTCD, CASE WHEN USRACCTCD LIKE '4%' THEN '매출액' ELSE USRACCTNAME END ACCTKNAME
						FROM USRACCTDEFDETAIL
						WHERE USRTYPE = 'devPjt'
						AND USRACCTTYPE = 'C' 
					)B
					WHERE A.ACCTCD(+) = B.ACCTCD
				)
			)GROUP BY ACCTCD, ACCTKNAME				
	]]>
	</sql-content>
	</sql-mapping>
	
	<sql-mapping  id="R_112"   value-count="1" url="PJT별 원가배부기준 조회" >  
	<sql-content>
	<![CDATA[
SELECT  A.* ,B.DBNAME ACCTKNAME
FROM(
        SELECT ROUND(DECODE(SUM(DIRECT_D),'',0,SUM(DIRECT_D)*0.001)) DIRECT_D,
                   ROUND(DECODE(SUM(DIRECT_I),'',0,SUM(DIRECT_I)*0.001)) DIRECT_I,
                   ROUND(DECODE((SUM(DIRECT_D)+ SUM(DIRECT_I)),'',0,(SUM(DIRECT_D)+ SUM(DIRECT_I))*0.001))AS DIRECT_TOT,
                   ROUND(DECODE(SUM(PART_D),'',0,SUM(PART_D)*0.001)) PART_D,
                   ROUND(DECODE(SUM(PART_I),'',0,SUM(PART_I)*0.001)) PART_I,
                   ROUND(DECODE((SUM(PART_D)+ SUM(PART_I)),'',0,(SUM(PART_D)+ SUM(PART_I))*0.001)) AS PART_TOT,
                   ROUND(DECODE(SUM(PERSON_D),'',0,SUM(PERSON_D*0.001))) PERSON_D,
                   ROUND(DECODE(SUM(PERSON_I),'',0,SUM(PERSON_I)*0.001)) PERSON_I,
                   ROUND(DECODE((SUM(PERSON_D)+ SUM(PERSON_I)),'',0,(SUM(PERSON_D)+ SUM(PERSON_I))*0.001)) AS PERSON_TOT,
                   ROUND(DECODE(SUM(AMT),'',0,SUM(AMT)*0.001)) ALL_TOT,
				   DB_NO
                        FROM (
						SELECT CASE WHEN NAME = '직접원가' AND COSTTYPE = 'D' THEN AMT END DIRECT_D,
                                   CASE WHEN NAME = '직접원가' AND COSTTYPE = 'I' THEN AMT END DIRECT_I,
                                   CASE WHEN NAME = '부문공통비' AND COSTTYPE = 'D' THEN AMT END PART_D,
                                   CASE WHEN NAME = '부문공통비' AND COSTTYPE = 'I' THEN AMT END PART_I,
                                   CASE WHEN NAME = '일반관리비' AND COSTTYPE = 'D' THEN AMT END PERSON_D,
                                   CASE WHEN NAME = '일반관리비' AND COSTTYPE = 'I' THEN AMT END PERSON_I,
                                   AMT, DB_NO
                        FROM(					
													SELECT  CASE WHEN B.ACCTCD ='93000' THEN '일반관리비'
                                                                WHEN B.ACCTCD = '92000' THEN '부문공통비'
                                                                ELSE '직접원가' END NAME,
                                                            CASE WHEN COSTTYPE LIKE '%I%' THEN 'I' ELSE 'D' END COSTTYPE,
                                                                AMT, DB_NO
                                                FROM(          
																SELECT DISTINCT YEAR, MONTH, COSTTYPE, SUBSTR(ACCTCD,1,4)||'0' AS ACCTCD,
                                                                           SUM(AMT) OVER(PARTITION BY (SUBSTR(ACCTCD,1,4)||'0'), COSTTYPE, DB_NO ) AMT, DB_NO
                                                                           FROM COSTACTUALRESULTS_PJT A, PROJECT B --실적
                                                                           WHERE A.PJT_NO = B.PJT_NO
                                                                           AND B.PJT_NO = ?  -- PJTNO
                                                        )A
                                                        , (
                                                                SELECT USRACCTCD ACCTCD, USRACCTNAME ACCTKNAME
                                                                FROM USRACCTDEFDETAIL
                                                                WHERE USRTYPE = 'devPjt'
                                                                AND USRACCTTYPE = 'C'
                                                                AND USRACCTCD NOT LIKE '4%'
                                                        )B
                                                        WHERE A.ACCTCD(+) = B.ACCTCD				
                                                )																					
                                        )GROUP BY  DB_NO										
                                        ORDER BY  DB_NO
										)A, DISTRIBUTIONBASIS B
										WHERE A.DB_NO(+) = B.DB_NO
		
	]]>
	</sql-content>
	</sql-mapping>

	<sql-mapping  id="R_113"   value-count="2" url="PJT별 원가배부기준 조회 / 목표영업기준 배부기준" >  
	<sql-content>
	<![CDATA[
		SELECT ROUND(DECODE(SUM(DIRECT_D),'',0,SUM(DIRECT_D)*0.001)) DIRECT_D, 
			   ROUND(DECODE(SUM(DIRECT_I),'',0,SUM(DIRECT_I)*0.001)) DIRECT_I, 
			   ROUND(DECODE((SUM(DIRECT_D)+ SUM(DIRECT_I)),'',0,(SUM(DIRECT_D)+ SUM(DIRECT_I))*0.001))AS DIRECT_TOT, 
			   ROUND(DECODE(SUM(PART_D),'',0,SUM(PART_D)*0.001)) PART_D, 
			   ROUND(DECODE(SUM(PART_I),'',0,SUM(PART_I)*0.001)) PART_I, 
			   ROUND(DECODE((SUM(PART_D)+ SUM(PART_I)),'',0,(SUM(PART_D)+ SUM(PART_I))*0.001)) AS PART_TOT,
			   ROUND(DECODE(SUM(PERSON_D),'',0,SUM(PERSON_D*0.001))) PERSON_D, 
			   ROUND(DECODE(SUM(PERSON_I),'',0,SUM(PERSON_I)*0.001)) PERSON_I, 
			   ROUND(DECODE((SUM(PERSON_D)+ SUM(PERSON_I)),'',0,(SUM(PERSON_D)+ SUM(PERSON_I))*0.001)) AS PERSON_TOT,
			   ROUND(DECODE(SUM(AMT),'',0,SUM(AMT)*0.001)) ALL_TOT,
			   ACCTKNAME
	   	   		FROM (
			SELECT CASE WHEN NAME = '직접원가' AND COSTTYPE = 'D' THEN AMT END DIRECT_D,
				   CASE WHEN NAME = '직접원가' AND COSTTYPE = 'I' THEN AMT END DIRECT_I,
				   CASE WHEN NAME = '부문공통비' AND COSTTYPE = 'D' THEN AMT END PART_D,
				   CASE WHEN NAME = '부문공통비' AND COSTTYPE = 'I' THEN AMT END PART_I,
				   CASE WHEN NAME = '일반관리비' AND COSTTYPE = 'D' THEN AMT END PERSON_D,
				   CASE WHEN NAME = '일반관리비' AND COSTTYPE = 'I' THEN AMT END PERSON_I,
				   AMT, ACCTKNAME
			FROM(				
						SELECT  CASE WHEN B.ACCTCD ='93000' THEN '일반관리비'
								WHEN B.ACCTCD = '92000' THEN '부문공통비' 
								ELSE '직접원가' END NAME,
							    CASE WHEN COSTTYPE LIKE '%I%' THEN 'I' ELSE 'D' END COSTTYPE,
								CASE WHEN B.ACCTCD ='50010' THEN '1.상품원가' 
									   WHEN B.ACCTCD IN ('50020','50030','50030','50040','50060') THEN '2.인건비'
									   WHEN B.ACCTCD ='50050' THEN '3.잡급'
									   WHEN B.ACCTCD ='50110' THEN '4.위탁용역비'
									   WHEN B.ACCTCD ='50140' THEN '5.복리후생비'
									   WHEN B.ACCTCD ='50150' THEN '6.급식비'
									   WHEN B.ACCTCD ='50160' THEN '7.교통여비'
									   WHEN B.ACCTCD ='50260' THEN '8.접대비'		
				   					   ELSE '9.제비용' END 
				   					   ACCTKNAME,  AMT
						FROM(		
								SELECT DISTINCT YEAR, MONTH, COSTTYPE, SUBSTR(ACCTCD,1,4)||'0' AS ACCTCD, 
									   SUM(AMT) OVER(PARTITION BY (SUBSTR(ACCTCD,1,4)||'0'), COSTTYPE ) AMT						   
									   FROM COSTACTUALRESULTS_PJT A, PROJECT B --실적
									   WHERE A.PJT_NO = B.PJT_NO
									   AND B.PJT_NO = ? -- PJTNO
									   AND DB_NO = ?	-- 목표영업기준 (1)							   						   
							)A	
							, (					
							  	SELECT USRACCTCD ACCTCD, USRACCTNAME ACCTKNAME
								FROM USRACCTDEFDETAIL
								WHERE USRTYPE = 'devPjt'
								AND USRACCTTYPE = 'C'
								AND USRACCTCD NOT LIKE '4%'		
							)B
							WHERE A.ACCTCD(+) = B.ACCTCD
						)							
					)GROUP BY  ACCTKNAME
					ORDER BY ACCTKNAME	
	]]>
	</sql-content>
	</sql-mapping>
								
</sql>

